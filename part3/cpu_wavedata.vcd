$date
	Sun May 25 03:33:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 8 & mux2_out [7:0] $end
$var wire 8 ' mux1_out [7:0] $end
$var wire 3 ( WRITEREG [2:0] $end
$var wire 1 ) WRITEENABLE $end
$var wire 8 * WRITEDATA [7:0] $end
$var wire 8 + REGOUT2 [7:0] $end
$var wire 8 , REGOUT1 [7:0] $end
$var wire 3 - READREG2 [2:0] $end
$var wire 3 . READREG1 [2:0] $end
$var wire 32 / PC [31:0] $end
$var wire 8 0 OPCODE [7:0] $end
$var wire 1 1 NEMUX $end
$var wire 8 2 NEGATIVENUMBER [7:0] $end
$var wire 8 3 IMMEDIATE [7:0] $end
$var wire 1 4 ALUSRC $end
$var wire 3 5 ALUOP [2:0] $end
$scope module ALU $end
$var wire 3 6 SELECT [2:0] $end
$var wire 8 7 RESULT [7:0] $end
$var wire 8 8 I3 [7:0] $end
$var wire 8 9 I2 [7:0] $end
$var wire 8 : I1 [7:0] $end
$var wire 8 ; I0 [7:0] $end
$var wire 8 < DATA2 [7:0] $end
$var wire 8 = DATA1 [7:0] $end
$upscope $end
$scope module DECODER $end
$var wire 32 > INSTRUCTION [31:0] $end
$var reg 8 ? IMMEDIATE [7:0] $end
$var reg 8 @ OPCODE [7:0] $end
$var reg 3 A READREG1 [2:0] $end
$var reg 3 B READREG2 [2:0] $end
$var reg 3 C WRITEREG [2:0] $end
$upscope $end
$scope module MUX1 $end
$var wire 1 1 select $end
$var wire 8 D OUTPUT [7:0] $end
$var wire 8 E DATA2 [7:0] $end
$var wire 8 F DATA1 [7:0] $end
$upscope $end
$scope module MUX2 $end
$var wire 8 G DATA1 [7:0] $end
$var wire 8 H DATA2 [7:0] $end
$var wire 1 4 select $end
$var wire 8 I OUTPUT [7:0] $end
$upscope $end
$scope module PCUNIT $end
$var wire 1 " CLK $end
$var wire 1 $ RESET $end
$var wire 32 J nextpc [31:0] $end
$var reg 32 K PC [31:0] $end
$upscope $end
$scope module REGFILE $end
$var wire 1 " CLK $end
$var wire 8 L IN [7:0] $end
$var wire 3 M INADDRESS [2:0] $end
$var wire 3 N OUT1ADDRESS [2:0] $end
$var wire 3 O OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ) WRITE $end
$var reg 8 P OUT1 [7:0] $end
$var reg 8 Q OUT2 [7:0] $end
$var reg 8 R register0 [7:0] $end
$var reg 8 S register1 [7:0] $end
$var reg 8 T register2 [7:0] $end
$var reg 8 U register3 [7:0] $end
$var reg 8 V register4 [7:0] $end
$var reg 8 W register5 [7:0] $end
$var reg 8 X register6 [7:0] $end
$var reg 8 Y register7 [7:0] $end
$upscope $end
$scope module control $end
$var wire 8 Z OPCODE [7:0] $end
$var reg 3 [ ALUOP [2:0] $end
$var reg 1 4 ALUSRC $end
$var reg 1 1 NEMUX $end
$var reg 1 ) WRITEENABLE $end
$upscope $end
$scope module twos $end
$var wire 8 \ DATA_IN [7:0] $end
$var reg 8 ] DATA_OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
bx 3
bx 2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bx (
bx '
bx &
bx %
0$
bx #
0"
bx !
$end
#2
1$
#4
1"
#5
b0 !
b0 /
b0 K
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
#6
b100 J
0$
#7
b101 3
b101 ?
b101 G
b100 (
b100 C
b100 M
b101 -
b101 B
b101 O
b0 .
b0 A
b0 N
b101 0
b101 @
b101 Z
b101000001000000000000000101 #
b101000001000000000000000101 %
b101000001000000000000000101 >
#8
b101 &
b101 <
b101 I
01
04
b0 5
b0 6
b0 [
1)
0"
#9
b101 *
b101 7
b101 L
b0 '
b0 D
b0 H
b101 8
b0 9
b101 ;
b0 +
b0 F
b0 Q
b0 \
b0 ,
b0 =
b0 P
#10
b0 2
b0 E
b0 ]
b101 :
#12
1"
#13
b100 !
b100 /
b100 K
b101 V
#14
b1000 J
#15
b1001 &
b1001 <
b1001 I
b1001 3
b1001 ?
b1001 G
b10 (
b10 C
b10 M
b1 -
b1 B
b1 O
b101000000100000000000001001 #
b101000000100000000000001001 %
b101000000100000000000001001 >
#16
b1001 *
b1001 7
b1001 L
b1001 8
b1001 ;
0"
#17
b1001 :
#20
1"
#21
b1000 !
b1000 /
b1000 K
b1001 T
#22
b1100 J
#23
b10 &
b10 <
b10 I
b10 3
b10 ?
b10 G
b110 (
b110 C
b110 M
b10 -
b10 B
b10 O
b100 .
b100 A
b100 N
b0 0
b0 @
b0 Z
b1100000010000000010 #
b1100000010000000010 %
b1100000010000000010 >
#24
b0 &
b0 <
b0 I
b10 8
b10 ;
14
b1 5
b1 6
b1 [
0"
#25
b1001 &
b1001 <
b1001 I
b101 *
b101 7
b101 L
b1001 '
b1001 D
b1001 H
b101 8
b0 ;
b101 :
b1001 +
b1001 F
b1001 Q
b1001 \
b101 ,
b101 =
b101 P
#26
b1101 8
b1 9
b1001 ;
b11110111 2
b11110111 E
b11110111 ]
#27
b1110 *
b1110 7
b1110 L
b1110 :
#28
1"
#29
b1100 !
b1100 /
b1100 K
b1110 X
#30
b10000 J
#31
b110 3
b110 ?
b110 G
b0 (
b0 C
b0 M
b110 -
b110 B
b110 O
b0 .
b0 A
b0 N
b100 0
b100 @
b100 Z
b100000000000000000000000110 #
b100000000000000000000000110 %
b100000000000000000000000110 >
#32
b1001 *
b1001 7
b1001 L
b0 5
b0 6
b0 [
0"
#33
b1110 &
b1110 <
b1110 I
b1110 '
b1110 D
b1110 H
b1110 +
b1110 F
b1110 Q
b1110 \
b0 ,
b0 =
b0 P
#34
b1110 *
b1110 7
b1110 L
b1110 ;
b11110010 2
b11110010 E
b11110010 ]
b0 9
b1110 8
#36
1"
#37
b10000 !
b10000 /
b10000 K
b1110 R
#38
b10100 J
b1110 ,
b1110 =
b1110 P
#39
b1 3
b1 ?
b1 G
b1 (
b1 C
b1 M
b1 -
b1 B
b1 O
b101 0
b101 @
b101 Z
b1110 9
b101000000010000000000000001 #
b101000000010000000000000001 %
b101000000010000000000000001 >
#40
b1 &
b1 <
b1 I
04
b11100 :
0"
#41
b1 *
b1 7
b1 L
b0 '
b0 D
b0 H
b0 9
b1111 8
b1 ;
b0 +
b0 F
b0 Q
b0 \
#42
b0 2
b0 E
b0 ]
b1111 :
#44
1"
#45
b10100 !
b10100 /
b10100 K
b1 S
#46
b1 '
b1 D
b1 H
b11000 J
b1 +
b1 F
b1 Q
b1 \
#47
b10 (
b10 C
b10 M
b10 .
b10 A
b10 N
b0 0
b0 @
b0 Z
b11111111 2
b11111111 E
b11111111 ]
b100000001000000001 #
b100000001000000001 %
b100000001000000001 >
#48
b1111 *
b1111 7
b1111 L
14
b1 5
b1 6
b1 [
0"
#49
b1001 ,
b1001 =
b1001 P
#50
b1001 8
b1 9
#51
b1010 *
b1010 7
b1010 L
b1010 :
#52
1"
#53
b11000 !
b11000 /
b11000 K
b1010 T
#54
b11100 J
b1010 ,
b1010 =
b1010 P
#55
bx 3
bx ?
bx G
bx (
bx C
bx M
bx -
bx B
bx O
bx .
bx A
bx N
bx 0
bx @
bx Z
b0 9
b1011 8
bx #
bx %
bx >
#56
b1011 *
b1011 7
b1011 L
b1011 :
0"
#60
1"
#61
b11100 !
b11100 /
b11100 K
#62
b100000 J
#64
0"
#68
1"
#69
b100000 !
b100000 /
b100000 K
#70
b100100 J
#72
0"
#76
1"
#77
b100100 !
b100100 /
b100100 K
#78
b101000 J
#80
0"
#84
1"
#85
b101000 !
b101000 /
b101000 K
#86
b101100 J
#88
0"
#92
1"
#93
b101100 !
b101100 /
b101100 K
#94
b110000 J
#96
0"
#100
1"
#101
b110000 !
b110000 /
b110000 K
#102
b110100 J
#104
0"
#108
1"
#109
b110100 !
b110100 /
b110100 K
#110
b111000 J
#112
0"
#116
1"
#117
b111000 !
b111000 /
b111000 K
#118
b111100 J
#120
0"
#124
1"
#125
b111100 !
b111100 /
b111100 K
#126
b1000000 J
#128
0"
#132
1"
#133
b1000000 !
b1000000 /
b1000000 K
#134
b1000100 J
#136
0"
#140
1"
#141
b1000100 !
b1000100 /
b1000100 K
#142
b1001000 J
#144
0"
#148
1"
#149
b1001000 !
b1001000 /
b1001000 K
#150
b1001100 J
#152
0"
#156
1"
#157
b1001100 !
b1001100 /
b1001100 K
#158
b1010000 J
#160
0"
#164
1"
#165
b1010000 !
b1010000 /
b1010000 K
#166
b1010100 J
#168
0"
#172
1"
#173
b1010100 !
b1010100 /
b1010100 K
#174
b1011000 J
#176
0"
#180
1"
#181
b1011000 !
b1011000 /
b1011000 K
#182
b1011100 J
#184
0"
#188
1"
#189
b1011100 !
b1011100 /
b1011100 K
#190
b1100000 J
#192
0"
#196
1"
#197
b1100000 !
b1100000 /
b1100000 K
#198
b1100100 J
#200
0"
#204
1"
#205
b1100100 !
b1100100 /
b1100100 K
#206
b1101000 J
#208
0"
#212
1"
#213
b1101000 !
b1101000 /
b1101000 K
#214
b1101100 J
#216
0"
#220
1"
#221
b1101100 !
b1101100 /
b1101100 K
#222
b1110000 J
#224
0"
#228
1"
#229
b1110000 !
b1110000 /
b1110000 K
#230
b1110100 J
#232
0"
#236
1"
#237
b1110100 !
b1110100 /
b1110100 K
#238
b1111000 J
#240
0"
#244
1"
#245
b1111000 !
b1111000 /
b1111000 K
#246
b1111100 J
#248
0"
#252
1"
#253
b1111100 !
b1111100 /
b1111100 K
#254
b10000000 J
#256
0"
#260
1"
#261
b10000000 !
b10000000 /
b10000000 K
#262
b10000100 J
#264
0"
#268
1"
#269
b10000100 !
b10000100 /
b10000100 K
#270
b10001000 J
#272
0"
#276
1"
#277
b10001000 !
b10001000 /
b10001000 K
#278
b10001100 J
#280
0"
#284
1"
#285
b10001100 !
b10001100 /
b10001100 K
#286
b10010000 J
#288
0"
#292
1"
#293
b10010000 !
b10010000 /
b10010000 K
#294
b10010100 J
#296
0"
#300
1"
#301
b10010100 !
b10010100 /
b10010100 K
#302
b10011000 J
#304
0"
#308
1"
#309
b10011000 !
b10011000 /
b10011000 K
#310
b10011100 J
#312
0"
#316
1"
#317
b10011100 !
b10011100 /
b10011100 K
#318
b10100000 J
#320
0"
#324
1"
#325
b10100000 !
b10100000 /
b10100000 K
#326
b10100100 J
#328
0"
#332
1"
#333
b10100100 !
b10100100 /
b10100100 K
#334
b10101000 J
#336
0"
#340
1"
#341
b10101000 !
b10101000 /
b10101000 K
#342
b10101100 J
#344
0"
#348
1"
#349
b10101100 !
b10101100 /
b10101100 K
#350
b10110000 J
#352
0"
#356
1"
#357
b10110000 !
b10110000 /
b10110000 K
#358
b10110100 J
#360
0"
#364
1"
#365
b10110100 !
b10110100 /
b10110100 K
#366
b10111000 J
#368
0"
#372
1"
#373
b10111000 !
b10111000 /
b10111000 K
#374
b10111100 J
#376
0"
#380
1"
#381
b10111100 !
b10111100 /
b10111100 K
#382
b11000000 J
#384
0"
#388
1"
#389
b11000000 !
b11000000 /
b11000000 K
#390
b11000100 J
#392
0"
#396
1"
#397
b11000100 !
b11000100 /
b11000100 K
#398
b11001000 J
#400
0"
#404
1"
#405
b11001000 !
b11001000 /
b11001000 K
#406
b11001100 J
#408
0"
#412
1"
#413
b11001100 !
b11001100 /
b11001100 K
#414
b11010000 J
#416
0"
#420
1"
#421
b11010000 !
b11010000 /
b11010000 K
#422
b11010100 J
#424
0"
#428
1"
#429
b11010100 !
b11010100 /
b11010100 K
#430
b11011000 J
#432
0"
#436
1"
#437
b11011000 !
b11011000 /
b11011000 K
#438
b11011100 J
#440
0"
#444
1"
#445
b11011100 !
b11011100 /
b11011100 K
#446
b11100000 J
#448
0"
#452
1"
#453
b11100000 !
b11100000 /
b11100000 K
#454
b11100100 J
#456
0"
#460
1"
#461
b11100100 !
b11100100 /
b11100100 K
#462
b11101000 J
#464
0"
#468
1"
#469
b11101000 !
b11101000 /
b11101000 K
#470
b11101100 J
#472
0"
#476
1"
#477
b11101100 !
b11101100 /
b11101100 K
#478
b11110000 J
#480
0"
#484
1"
#485
b11110000 !
b11110000 /
b11110000 K
#486
b11110100 J
#488
0"
#492
1"
#493
b11110100 !
b11110100 /
b11110100 K
#494
b11111000 J
#496
0"
#500
1"
#501
b11111000 !
b11111000 /
b11111000 K
#502
b11111100 J
#504
0"
#506
